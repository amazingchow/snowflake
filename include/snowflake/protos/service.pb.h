// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_service_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_service_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_service_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_service_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_service_2eproto;
namespace photon_dance_snowflake_service {
class PhotonDanceSnowflakeServiceRequest;
class PhotonDanceSnowflakeServiceRequestDefaultTypeInternal;
extern PhotonDanceSnowflakeServiceRequestDefaultTypeInternal _PhotonDanceSnowflakeServiceRequest_default_instance_;
class PhotonDanceSnowflakeServiceResponse;
class PhotonDanceSnowflakeServiceResponseDefaultTypeInternal;
extern PhotonDanceSnowflakeServiceResponseDefaultTypeInternal _PhotonDanceSnowflakeServiceResponse_default_instance_;
}  // namespace photon_dance_snowflake_service
PROTOBUF_NAMESPACE_OPEN
template<> ::photon_dance_snowflake_service::PhotonDanceSnowflakeServiceRequest* Arena::CreateMaybeMessage<::photon_dance_snowflake_service::PhotonDanceSnowflakeServiceRequest>(Arena*);
template<> ::photon_dance_snowflake_service::PhotonDanceSnowflakeServiceResponse* Arena::CreateMaybeMessage<::photon_dance_snowflake_service::PhotonDanceSnowflakeServiceResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace photon_dance_snowflake_service {

// ===================================================================

class PhotonDanceSnowflakeServiceRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:photon_dance_snowflake_service.PhotonDanceSnowflakeServiceRequest) */ {
 public:
  inline PhotonDanceSnowflakeServiceRequest() : PhotonDanceSnowflakeServiceRequest(nullptr) {}
  virtual ~PhotonDanceSnowflakeServiceRequest();

  PhotonDanceSnowflakeServiceRequest(const PhotonDanceSnowflakeServiceRequest& from);
  PhotonDanceSnowflakeServiceRequest(PhotonDanceSnowflakeServiceRequest&& from) noexcept
    : PhotonDanceSnowflakeServiceRequest() {
    *this = ::std::move(from);
  }

  inline PhotonDanceSnowflakeServiceRequest& operator=(const PhotonDanceSnowflakeServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PhotonDanceSnowflakeServiceRequest& operator=(PhotonDanceSnowflakeServiceRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PhotonDanceSnowflakeServiceRequest& default_instance();

  static inline const PhotonDanceSnowflakeServiceRequest* internal_default_instance() {
    return reinterpret_cast<const PhotonDanceSnowflakeServiceRequest*>(
               &_PhotonDanceSnowflakeServiceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PhotonDanceSnowflakeServiceRequest& a, PhotonDanceSnowflakeServiceRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PhotonDanceSnowflakeServiceRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PhotonDanceSnowflakeServiceRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PhotonDanceSnowflakeServiceRequest* New() const final {
    return CreateMaybeMessage<PhotonDanceSnowflakeServiceRequest>(nullptr);
  }

  PhotonDanceSnowflakeServiceRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PhotonDanceSnowflakeServiceRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PhotonDanceSnowflakeServiceRequest& from);
  void MergeFrom(const PhotonDanceSnowflakeServiceRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PhotonDanceSnowflakeServiceRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "photon_dance_snowflake_service.PhotonDanceSnowflakeServiceRequest";
  }
  protected:
  explicit PhotonDanceSnowflakeServiceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_service_2eproto);
    return ::descriptor_table_service_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMachineIdFieldNumber = 1,
  };
  // int64 machine_id = 1;
  void clear_machine_id();
  ::PROTOBUF_NAMESPACE_ID::int64 machine_id() const;
  void set_machine_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_machine_id() const;
  void _internal_set_machine_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:photon_dance_snowflake_service.PhotonDanceSnowflakeServiceRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 machine_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_service_2eproto;
};
// -------------------------------------------------------------------

class PhotonDanceSnowflakeServiceResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:photon_dance_snowflake_service.PhotonDanceSnowflakeServiceResponse) */ {
 public:
  inline PhotonDanceSnowflakeServiceResponse() : PhotonDanceSnowflakeServiceResponse(nullptr) {}
  virtual ~PhotonDanceSnowflakeServiceResponse();

  PhotonDanceSnowflakeServiceResponse(const PhotonDanceSnowflakeServiceResponse& from);
  PhotonDanceSnowflakeServiceResponse(PhotonDanceSnowflakeServiceResponse&& from) noexcept
    : PhotonDanceSnowflakeServiceResponse() {
    *this = ::std::move(from);
  }

  inline PhotonDanceSnowflakeServiceResponse& operator=(const PhotonDanceSnowflakeServiceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PhotonDanceSnowflakeServiceResponse& operator=(PhotonDanceSnowflakeServiceResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PhotonDanceSnowflakeServiceResponse& default_instance();

  static inline const PhotonDanceSnowflakeServiceResponse* internal_default_instance() {
    return reinterpret_cast<const PhotonDanceSnowflakeServiceResponse*>(
               &_PhotonDanceSnowflakeServiceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PhotonDanceSnowflakeServiceResponse& a, PhotonDanceSnowflakeServiceResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PhotonDanceSnowflakeServiceResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PhotonDanceSnowflakeServiceResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PhotonDanceSnowflakeServiceResponse* New() const final {
    return CreateMaybeMessage<PhotonDanceSnowflakeServiceResponse>(nullptr);
  }

  PhotonDanceSnowflakeServiceResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PhotonDanceSnowflakeServiceResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PhotonDanceSnowflakeServiceResponse& from);
  void MergeFrom(const PhotonDanceSnowflakeServiceResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PhotonDanceSnowflakeServiceResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "photon_dance_snowflake_service.PhotonDanceSnowflakeServiceResponse";
  }
  protected:
  explicit PhotonDanceSnowflakeServiceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_service_2eproto);
    return ::descriptor_table_service_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUuidFieldNumber = 1,
  };
  // int64 uuid = 1;
  void clear_uuid();
  ::PROTOBUF_NAMESPACE_ID::int64 uuid() const;
  void set_uuid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_uuid() const;
  void _internal_set_uuid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:photon_dance_snowflake_service.PhotonDanceSnowflakeServiceResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 uuid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_service_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PhotonDanceSnowflakeServiceRequest

// int64 machine_id = 1;
inline void PhotonDanceSnowflakeServiceRequest::clear_machine_id() {
  machine_id_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 PhotonDanceSnowflakeServiceRequest::_internal_machine_id() const {
  return machine_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 PhotonDanceSnowflakeServiceRequest::machine_id() const {
  // @@protoc_insertion_point(field_get:photon_dance_snowflake_service.PhotonDanceSnowflakeServiceRequest.machine_id)
  return _internal_machine_id();
}
inline void PhotonDanceSnowflakeServiceRequest::_internal_set_machine_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  machine_id_ = value;
}
inline void PhotonDanceSnowflakeServiceRequest::set_machine_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_machine_id(value);
  // @@protoc_insertion_point(field_set:photon_dance_snowflake_service.PhotonDanceSnowflakeServiceRequest.machine_id)
}

// -------------------------------------------------------------------

// PhotonDanceSnowflakeServiceResponse

// int64 uuid = 1;
inline void PhotonDanceSnowflakeServiceResponse::clear_uuid() {
  uuid_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 PhotonDanceSnowflakeServiceResponse::_internal_uuid() const {
  return uuid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 PhotonDanceSnowflakeServiceResponse::uuid() const {
  // @@protoc_insertion_point(field_get:photon_dance_snowflake_service.PhotonDanceSnowflakeServiceResponse.uuid)
  return _internal_uuid();
}
inline void PhotonDanceSnowflakeServiceResponse::_internal_set_uuid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  uuid_ = value;
}
inline void PhotonDanceSnowflakeServiceResponse::set_uuid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_uuid(value);
  // @@protoc_insertion_point(field_set:photon_dance_snowflake_service.PhotonDanceSnowflakeServiceResponse.uuid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace photon_dance_snowflake_service

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_service_2eproto
